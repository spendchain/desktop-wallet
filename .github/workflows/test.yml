name: Test & Build

on:
  push:
    branches:
      - "develop"
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine the release version
        id: derive_release_version
        run: |
          RELEASE_VERSION=$(cat package.json | jq -r '.version')
          echo "::set-output name=version::${RELEASE_VERSION}"

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.derive_release_version.outputs.version }}
          release_name: Version ${{ steps.derive_release_version.outputs.version }}
          draft: true
          prerelease: false
          body: |
            ${{ steps.Changelog.outputs.changelog }}

  lint-unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update System
        run: sudo apt-get update

      - name: Ledger
        run: sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Install
        run: yarn global add node-gyp && yarn install --frozen-lockfile && npm rebuild

      - name: Lint
        run: yarn lint

      - name: Test
        run: node --max-old-space-size=4096 ./node_modules/.bin/jest --config __tests__/unit.jest.conf.js __tests__/unit/ --logHeapUsage --coverage

      - name: Codecov
        run: ./node_modules/.bin/codecov --token=${{ secrets.CODECOV_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Update System
        run: sudo apt-get update

      - name: Ledger
        run: sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Install
        run: yarn global add node-gyp && yarn install --frozen-lockfile

      - name: Re-build bcrypto
        run: cd node_modules/bcrypto && npm install && cd ../../

      - name: Build
        run: yarn build:linux

      # - name: Upload .AppImage
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: spnd-desktop-wallet-linux-1.0.1.AppImage
      #     path: build/target/spnd-desktop-wallet-linux-x86_64-1.0.1.AppImage

      # - name: Upload .tar.gz
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: spnd-desktop-wallet-linux-1.0.1.tar.gz
      #     path: build/target/spnd-desktop-wallet-linux-x64-1.0.1.tar.gz

      - name: Upload .deb
        uses: actions/upload-artifact@master
        with:
          name: spnd-desktop-wallet-linux-1.0.1-${{ github.sha }}.deb
          path: build/target/spnd-desktop-wallet-linux-amd64-1.0.1.deb

  build-macOS:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: yarn global add node-gyp && yarn install --frozen-lockfile

      - name: Build
        run: yarn build:mac
        env:
          SKIP_NOTARIZE: true

      # - name: Upload .zip
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: spnd-desktop-wallet-mac-1.0.1.zip
      #     path: build/target/spnd-desktop-wallet-mac-1.0.1.zip

      - name: Upload .dmg
        uses: actions/upload-artifact@v1
        with:
          name: spnd-desktop-wallet-mac-1.0.1-${{ github.sha }}.dmg
          path: build/target/spnd-desktop-wallet-mac-1.0.1.dmg

  build-windows:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install
        run: yarn global add node-gyp && yarn install --frozen-lockfile
        shell: cmd

      - name: Build
        run: yarn build:win
        shell: cmd

      - name: Upload .exe
        uses: actions/upload-artifact@v1
        with:
          name: spnd-desktop-wallet-win-1.0.1-${{ github.sha }}.exe
          path: build/target/spnd-desktop-wallet-win-1.0.1.exe
